name: Daily Yourshop Updates

on:
  schedule:
    - cron: '0 0 * * *'  # 매일 KST 09:00 (UTC 00:00)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  daily:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          elif [ -f package.json ]; then
            npm i
          else
            echo "no package.json -> skip install"
          fi

      - name: Build Today Updates (optional)
        run: |
          if [ -f scripts/build-today-updates.js ]; then
            node scripts/build-today-updates.js
          else
            echo "skip today-updates build"
          fi

      - name: Inject Today Updates (optional)
        run: |
          if [ -f scripts/inject-today-updates.js ]; then
            node scripts/inject-today-updates.js
          else
            echo "skip today-updates inject"
          fi

      - name: Generate product pages (Node)
        run: |
          if [ -f data/products.json ] && [ -f scripts/generate-pages.js ]; then
            if [ -f package.json ]; then
              npm run gen:pages
            else
              node scripts/generate-pages.js
            fi
          else
            echo "missing data/products.json or scripts/generate-pages.js, skip"
          fi

      - name: Generate sitemaps (index + chunks)
        run: |
          if [ -f scripts/build-sitemaps.js ]; then
            if [ -f package.json ]; then
              npm run gen:sitemaps
            else
              node scripts/build-sitemaps.js
            fi
          else
            echo "no build-sitemaps.js, skip"
          fi

      # 인덱스: index-sitemap.xml 기준. 없다고 실패하지 않음(찾기/복사/재생성).
      - name: Ensure index-sitemap.xml exists (no fail)
        run: |
          set -e
          echo "[fix] check index-sitemap.xml"
          if [ ! -f "index-sitemap.xml" ]; then
            echo "[fix] not at root. searching output dirs..."
            for p in ./ ./public ./dist ./build ./out ./_site; do
              if [ -f "$p/index-sitemap.xml" ]; then
                cp -f "$p/index-sitemap.xml" ./index-sitemap.xml
                echo "[fix] copied from $p"
                break
              fi
            done
          fi
          if [ ! -f "index-sitemap.xml" ]; then
            echo "[fix] still missing. regenerating..."
            if [ -f scripts/build-sitemaps.js ]; then
              node scripts/build-sitemaps.js || true
            fi
          fi
          if [ ! -f "index-sitemap.xml" ]; then
            echo "::warning ::index-sitemap.xml still missing, continuing without failing."
          fi

      # 루트 강제 배치 + .nojekyll 보장 + 빌드 스탬프(diff 보장) + 커밋/푸시
      - name: Force-place sitemaps at repo root and commit
        run: |
          set -e
          for p in ./ ./public ./dist ./build ./out ./_site; do
            [ -f "$p/sitemap.xml" ] && cp -f "$p/sitemap.xml" ./sitemap.xml || true
            [ -f "$p/index-sitemap.xml" ] && cp -f "$p/index-sitemap.xml" ./index-sitemap.xml || true
          done

          [ -f ./.nojekyll ] || touch .nojekyll

          stamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          for f in sitemap.xml index-sitemap.xml; do
            [ -f "$f" ] || continue
            if ! head -n 2 "$f" | grep -q 'build:'; then
              awk -v s="$stamp" 'NR==1{print; print "<!-- build: " s " -->"; next}1' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
            else
              sed -i.bak "0,/build:/s//build: $stamp/" "$f" || true
              rm -f "$f.bak"
            fi
          done

          git add .nojekyll sitemap.xml index-sitemap.xml || true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git diff --cached --quiet || git commit -m "chore: ensure sitemaps at root (auto)"
          git push || true

      - name: Configure git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"

      - name: Stage changes
        id: stage
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            echo "No changes to commit."
          else
            echo "no_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge remote main
        if: steps.stage.outputs.no_changes == 'false'
        run: |
          git fetch origin main
          git merge --ff-only origin/main || git merge --no-edit origin/main

      - name: Commit and push
        if: steps.stage.outputs.no_changes == 'false'
        run: |
          git commit -m "chore: daily updates (today + product pages via Node + sitemaps)" || echo "Already committed"
          git push origin HEAD:main

      - name: Ping search engines
        run: |
          BASE='https://rkskqdl-a11y.github.io/yourshop'
          SITEMAP_INDEX="$BASE/index-sitemap.xml"
          curl -s "https://www.google.com/ping?sitemap=$SITEMAP_INDEX" || true
          curl -s "https://www.bing.com/ping?sitemap=$SITEMAP_INDEX" || true
          curl -s "$BASE/" > /dev/null || true
